# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: services/chromosomeregion.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chromosome_region.structures import region_pb2 as structures_dot_region__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='services/chromosomeregion.proto',
  package='gcv.services',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1fservices/chromosomeregion.proto\x12\x0cgcv.services\x1a\x17structures/region.proto\"M\n\x1a\x43hromosomeRegionGetRequest\x12\x12\n\nchromosome\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\r\x12\x0c\n\x04stop\x18\x03 \x01(\r\"B\n\x18\x43hromosomeRegionGetReply\x12&\n\x06region\x18\x01 \x01(\x0b\x32\x16.gcv.structures.Region2m\n\x10\x43hromosomeRegion\x12Y\n\x03Get\x12(.gcv.services.ChromosomeRegionGetRequest\x1a&.gcv.services.ChromosomeRegionGetReply\"\x00\x62\x06proto3'
  ,
  dependencies=[structures_dot_region__pb2.DESCRIPTOR,])




_CHROMOSOMEREGIONGETREQUEST = _descriptor.Descriptor(
  name='ChromosomeRegionGetRequest',
  full_name='gcv.services.ChromosomeRegionGetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='chromosome', full_name='gcv.services.ChromosomeRegionGetRequest.chromosome', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start', full_name='gcv.services.ChromosomeRegionGetRequest.start', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stop', full_name='gcv.services.ChromosomeRegionGetRequest.stop', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=151,
)


_CHROMOSOMEREGIONGETREPLY = _descriptor.Descriptor(
  name='ChromosomeRegionGetReply',
  full_name='gcv.services.ChromosomeRegionGetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='region', full_name='gcv.services.ChromosomeRegionGetReply.region', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=219,
)

_CHROMOSOMEREGIONGETREPLY.fields_by_name['region'].message_type = structures_dot_region__pb2._REGION
DESCRIPTOR.message_types_by_name['ChromosomeRegionGetRequest'] = _CHROMOSOMEREGIONGETREQUEST
DESCRIPTOR.message_types_by_name['ChromosomeRegionGetReply'] = _CHROMOSOMEREGIONGETREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ChromosomeRegionGetRequest = _reflection.GeneratedProtocolMessageType('ChromosomeRegionGetRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHROMOSOMEREGIONGETREQUEST,
  '__module__' : 'services.chromosomeregion_pb2'
  # @@protoc_insertion_point(class_scope:gcv.services.ChromosomeRegionGetRequest)
  })
_sym_db.RegisterMessage(ChromosomeRegionGetRequest)

ChromosomeRegionGetReply = _reflection.GeneratedProtocolMessageType('ChromosomeRegionGetReply', (_message.Message,), {
  'DESCRIPTOR' : _CHROMOSOMEREGIONGETREPLY,
  '__module__' : 'services.chromosomeregion_pb2'
  # @@protoc_insertion_point(class_scope:gcv.services.ChromosomeRegionGetReply)
  })
_sym_db.RegisterMessage(ChromosomeRegionGetReply)



_CHROMOSOMEREGION = _descriptor.ServiceDescriptor(
  name='ChromosomeRegion',
  full_name='gcv.services.ChromosomeRegion',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=221,
  serialized_end=330,
  methods=[
  _descriptor.MethodDescriptor(
    name='Get',
    full_name='gcv.services.ChromosomeRegion.Get',
    index=0,
    containing_service=None,
    input_type=_CHROMOSOMEREGIONGETREQUEST,
    output_type=_CHROMOSOMEREGIONGETREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_CHROMOSOMEREGION)

DESCRIPTOR.services_by_name['ChromosomeRegion'] = _CHROMOSOMEREGION

# @@protoc_insertion_point(module_scope)
