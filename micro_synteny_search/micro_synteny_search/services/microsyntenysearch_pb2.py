# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: services/microsyntenysearch.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from micro_synteny_search.structures import microtrack_pb2 as structures_dot_microtrack__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='services/microsyntenysearch.proto',
  package='gcv.services',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n!services/microsyntenysearch.proto\x12\x0cgcv.services\x1a\x1bstructures/microtrack.proto\"Q\n\x19MicroSyntenySearchRequest\x12\r\n\x05query\x18\x01 \x03(\t\x12\x0f\n\x07matched\x18\x02 \x01(\x02\x12\x14\n\x0cintermediate\x18\x03 \x01(\x02\"E\n\x17MicroSyntenySearchReply\x12*\n\x06tracks\x18\x01 \x03(\x0b\x32\x1a.gcv.structures.MicroTrack2p\n\x12MicroSyntenySearch\x12Z\n\x06Search\x12\'.gcv.services.MicroSyntenySearchRequest\x1a%.gcv.services.MicroSyntenySearchReply\"\x00\x62\x06proto3'
  ,
  dependencies=[structures_dot_microtrack__pb2.DESCRIPTOR,])




_MICROSYNTENYSEARCHREQUEST = _descriptor.Descriptor(
  name='MicroSyntenySearchRequest',
  full_name='gcv.services.MicroSyntenySearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='query', full_name='gcv.services.MicroSyntenySearchRequest.query', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='matched', full_name='gcv.services.MicroSyntenySearchRequest.matched', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='intermediate', full_name='gcv.services.MicroSyntenySearchRequest.intermediate', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=161,
)


_MICROSYNTENYSEARCHREPLY = _descriptor.Descriptor(
  name='MicroSyntenySearchReply',
  full_name='gcv.services.MicroSyntenySearchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tracks', full_name='gcv.services.MicroSyntenySearchReply.tracks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=163,
  serialized_end=232,
)

_MICROSYNTENYSEARCHREPLY.fields_by_name['tracks'].message_type = structures_dot_microtrack__pb2._MICROTRACK
DESCRIPTOR.message_types_by_name['MicroSyntenySearchRequest'] = _MICROSYNTENYSEARCHREQUEST
DESCRIPTOR.message_types_by_name['MicroSyntenySearchReply'] = _MICROSYNTENYSEARCHREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MicroSyntenySearchRequest = _reflection.GeneratedProtocolMessageType('MicroSyntenySearchRequest', (_message.Message,), {
  'DESCRIPTOR' : _MICROSYNTENYSEARCHREQUEST,
  '__module__' : 'services.microsyntenysearch_pb2'
  # @@protoc_insertion_point(class_scope:gcv.services.MicroSyntenySearchRequest)
  })
_sym_db.RegisterMessage(MicroSyntenySearchRequest)

MicroSyntenySearchReply = _reflection.GeneratedProtocolMessageType('MicroSyntenySearchReply', (_message.Message,), {
  'DESCRIPTOR' : _MICROSYNTENYSEARCHREPLY,
  '__module__' : 'services.microsyntenysearch_pb2'
  # @@protoc_insertion_point(class_scope:gcv.services.MicroSyntenySearchReply)
  })
_sym_db.RegisterMessage(MicroSyntenySearchReply)



_MICROSYNTENYSEARCH = _descriptor.ServiceDescriptor(
  name='MicroSyntenySearch',
  full_name='gcv.services.MicroSyntenySearch',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=234,
  serialized_end=346,
  methods=[
  _descriptor.MethodDescriptor(
    name='Search',
    full_name='gcv.services.MicroSyntenySearch.Search',
    index=0,
    containing_service=None,
    input_type=_MICROSYNTENYSEARCHREQUEST,
    output_type=_MICROSYNTENYSEARCHREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MICROSYNTENYSEARCH)

DESCRIPTOR.services_by_name['MicroSyntenySearch'] = _MICROSYNTENYSEARCH

# @@protoc_insertion_point(module_scope)
